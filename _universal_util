# Pull all URLs from a sitemap.xml file
function siteurls() {
  curl -s $1/sitemap.xml | grep -e loc | sed 's|<loc>\(.*\)<\/loc>$|\1|g'
}

# Get the date of an SSL certificate
function datecert() {
  echo | openssl s_client -connect $1:443 2>/dev/null | openssl x509 -noout -dates
}

# Network Monitoring
function watch_requests() {
  sudo ngrep -q -W byline "^(GET|POST|PUT) .*"
}

# Misc Networking
alias hazip="curl --ipv4 http://icanhazip.com"

# Lookup public IP address
function public_ip() {
  # dig -4 @ns1-1.akamaitech.net -t a whoami.akamai.net +short
  # dig -4 @resolver1.opendns.com -t a myip.opendns.com +short
  dig @ns1.google.com -t txt o-o.myaddr.l.google.com +short | sed 's/\"//g'
}

# Docker Based Functions
alias rustscan='docker run -it --rm --name rustscan rustscan/rustscan:2.1.1'

function dinghy_proxy() {
  echo "Starting the Dinghy Proxy..."

  # Kill any existing copies of dinghy-http-proxy and wait for it to stop
  [ "$(docker ps -a | grep dinghy-http-proxy)" ] && docker kill dinghy-http-proxy

  sleep 5

  # Start up a fresh copy of the proxy
  docker run --rm -d \
    --security-opt=label=type:docker_t \
    -v /var/run/docker.sock:/tmp/docker.sock:ro \
    -v ~/.dinghy/certs:/etc/nginx/certs \
    -p 80:80 -p 443:443 -p 19322:19322/udp \
    -e DNS_IP=127.0.0.1 -e CONTAINER_NAME=dinghy-http-proxy \
    --name dinghy-http-proxy \
    ltvco/dinghy-http-proxy
}


function aider() {
  docker pull paulgauthier/aider-full
  docker run -it --rm --volume $(pwd):/app paulgauthier/aider-full --openai-api-key $OPENAI_API_KEY
}

function aider-claude() {
  docker pull paulgauthier/aider-full
  docker run -it --rm --volume $(pwd):/app paulgauthier/aider-full --anthropic-api-key $ANTHROPIC_API_KEY --cache-prompts --no-stream
}

# Legacy command... using https://github.com/patricktulskie/automation-lab instead
function ollama-web() {
  # Kill and remove the container if it exists
  docker rm -f open-webui 2>/dev/null

  # Pull the latest image
  docker pull ghcr.io/open-webui/open-webui:main

  # Run the container
  docker run -d \
    -p 3000:8080 \
    --add-host=host.docker.internal:host-gateway \
    -v open-webui:/app/backend/data \
    --name open-webui \
    --restart always \
    ghcr.io/open-webui/open-webui:main
}

function ccdaemon() {
  docker kill cyberchef
  docker run --rm -d -e CONTAINER_NAME=cyberchef --name cyberchef -p 8000:8000 mpepping/cyberchef

  echo "Cyberchef is now running at http://localhost:8000"
}

function druby() {
  if [[ $1 != "" ]] ; then
    ruby_version=":$1"
  else
    ruby_version=""
  fi
  docker run -it --rm --network host --name "`basename "$PWD"`-`date +%s`" --mount src=`pwd`,target=/usr/src/myapp,type=bind -w /usr/src/myapp ruby$ruby_version bash
}
